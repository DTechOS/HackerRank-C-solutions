#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#define MAX_LEN 30

//Using a whitespace character in scanf() would ignore any number of whitespace characters left in the input stream

int main() 
{
    
    char ch;
    char s[MAX_LEN],sen[MAX_LEN];
    scanf(" %c%s", &ch,&s);
    scanf(" %[^\n]%*c",sen);
    printf("%c\n%s\n%s",ch,s,sen);

    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    
    return 0;
} 

-----------------------------------------------------------------------
//ASM Dump: Compiled using x86-64 GCC with no optimization options on godbolt compiler explorer

.LC0:
        .string " %c%s"
.LC1:
        .string " %[^\n]%*c"
.LC2:
        .string "%c\n%s\n%s"
main:
        push    rbp
        mov     rbp, rsp
        sub     rsp, 64
        lea     rdx, [rbp-32]
        lea     rax, [rbp-1]
        mov     rsi, rax
        mov     edi, OFFSET FLAT:.LC0
        mov     eax, 0
        call    __isoc99_scanf
        lea     rax, [rbp-64]
        mov     rsi, rax
        mov     edi, OFFSET FLAT:.LC1
        mov     eax, 0
        call    __isoc99_scanf
        movzx   eax, BYTE PTR [rbp-1]
        movsx   eax, al
        lea     rcx, [rbp-64]
        lea     rdx, [rbp-32]
        mov     esi, eax
        mov     edi, OFFSET FLAT:.LC2
        mov     eax, 0
        call    printf
        mov     eax, 0
        leave
        ret
    ------------------------------------------------------------------------------
    // 2nd solution that I pulled from some article I don't remember where.
    
// Playing With Characters - Hacker Rank Solution
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#define MAX_LIMIT 40
int main() 
{

    /* Enter your code here. Read input from STDIN. Print output to STDOUT */
    // Playing With Characters - Hacker Rank Solution START  
    char ch;
    char s[MAX_LIMIT];
    char sen[MAX_LIMIT];
    scanf("%c",&ch);
    scanf("%s",&s);
    scanf("\n");
    scanf("%[^\n]%*c", sen);
    printf("%c\n%s\n%s",ch,s,sen); 
    // Playing With Characters - Hacker Rank Solution END
    return 0;
}
-----------------------------------------
//ASM dump for 2nd solution same compiler and options as before

.LC0:
        .string "%c"
.LC1:
        .string "%s"
.LC2:
        .string "\n"
.LC3:
        .string "%[^\n]%*c"
.LC4:
        .string "%c\n%s\n%s"
main:
        push    rbp
        mov     rbp, rsp
        sub     rsp, 96
        lea     rax, [rbp-1]
        mov     rsi, rax
        mov     edi, OFFSET FLAT:.LC0
        mov     eax, 0
        call    __isoc99_scanf
        lea     rax, [rbp-48]
        mov     rsi, rax
        mov     edi, OFFSET FLAT:.LC1
        mov     eax, 0
        call    __isoc99_scanf
        mov     edi, OFFSET FLAT:.LC2
        mov     eax, 0
        call    __isoc99_scanf
        lea     rax, [rbp-96]
        mov     rsi, rax
        mov     edi, OFFSET FLAT:.LC3
        mov     eax, 0
        call    __isoc99_scanf
        movzx   eax, BYTE PTR [rbp-1]
        movsx   eax, al
        lea     rcx, [rbp-96]
        lea     rdx, [rbp-48]
        mov     esi, eax
        mov     edi, OFFSET FLAT:.LC4
        mov     eax, 0
        call    printf
        mov     eax, 0
        leave
        ret
 -----------------------------------------------------------------------------
    
    
    
